import{u as f,b as g,e as u,r as o,o as m,f as a,g as k,w as x,M as S,h as b,i as p,j as l,t as d}from"./index-DuLO6B9u.js";const A={class:"p-6"},B=p("h2",{class:"text-xl font-bold mb-4"},"Statement Analysis Result",-1),j={key:0},w={key:1,class:"text-red-600"},I={key:2,class:"bg-gray-100 p-4 rounded"},$={__name:"StatementAnalysis",setup(M){const _=f(),r=g(),y=u(()=>r.token),h=u(()=>r.tenant_id),i=o(null),n=o(!0),t=o(null),v=async e=>{const c=`https://dev02201.getjupita.com/api/${h.value}/get-analysis-result?analysis_id=${e}`;try{const s=await b.get(c,{headers:{Authorization:`Bearer ${y.value}`,"Content-Type":"application/json"}});console.log("statement analysis result page data:",s),i.value=s.data}catch(s){console.error("Error fetching analysis result:",s),t.value="Unable to fetch analysis result."}finally{n.value=!1}};return m(()=>{const e=_.params.id;e?v(e):(t.value="Invalid analysis ID.",n.value=!1)}),(e,c)=>(a(),k(S,null,{default:x(()=>[p("div",A,[B,n.value?(a(),l("div",j,"Loading...")):t.value?(a(),l("div",w,d(t.value),1)):(a(),l("pre",I,d(JSON.stringify(i.value,null,2)),1))])]),_:1}))}};export{$ as default};
